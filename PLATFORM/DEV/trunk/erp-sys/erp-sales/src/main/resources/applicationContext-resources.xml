<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">
    <!-- For mail settings and future properties files -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:system.properties</value>
                <value>classpath:source.properties</value>
                <value>classpath:schema.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl"
                  value="jdbc:mysql://127.0.0.1:3306/debi?useUnicode=true&amp;characterEncoding=utf-8" />
        <property name="user" value="root" />
        <property name="password" value="root" />
        <property name="acquireIncrement" value="3" />
        <property name="idleConnectionTestPeriod" value="1800" />
        <property name="initialPoolSize" value="3" />
        <property name="minPoolSize" value="3" />
        <property name="maxPoolSize" value="15" />
        <property name="numHelperThreads" value="3" />
        <property name="preferredTestQuery" value="select 1" />
        <property name="testConnectionOnCheckin" value="true" />
        <property name="testConnectionOnCheckout" value="true" />
    </bean>
    
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>


	
	<bean id="jdbcTemplateSms" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="jdbcTemplateAgent" class="org.springframework.jdbc.core.JdbcTemplate">
    	<property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="jdbcTemplateCti" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean id="messageConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                    <property name="marshaller" ref="xstreamMarshaller" />
                    <property name="unmarshaller" ref="xstreamMarshaller" />
                </bean>
                <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
                <bean class = "org.springframework.http.converter.StringHttpMessageConverter">
                    <property name = "supportedMediaTypes">
                        <list><value>text/plain;charset=UTF-8</value></list>
                    </property>
                </bean>
                <bean id="jsonConverter"
                      class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes" value="application/json" />
                </bean>
            </list>
        </property>
    </bean>

    <bean id="xstreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
    </bean>

	<bean id="messageSource"
	   class="org.springframework.context.support.ResourceBundleMessageSource">
	   <property name="basenames">
	    <list>
	     <value>messages</value>
	    </list>
	   </property>
	</bean>

    <bean id="ctiDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${cti.jdbc.driverClassName}"/>
        <property name="url" value="${cti.jdbc.url}"/>
        <property name="username" value="${cti.jdbc.username}"/>
        <property name="password" value="${cti.jdbc.password}"/>
        <property name="maxActive" value="100"/>
        <property name="maxWait" value="1000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="defaultAutoCommit" value="true"/>
        <property name="validationQuery" value="SELECT COUNT(*) FROM DUAL"/>
        <property name="testOnBorrow" value="true"/>
    </bean>


    <bean id="ctiJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="ctiDataSource"/>
    </bean>
    
    <bean id="appValidationResource" class="com.chinadrtv.erp.util.AppValidationResource" lazy-init="false">
    	<property name="validationQuery" value="SELECT COUNT(*) FROM DUAL"/>
    	<property name="dbs">
    		<list>
    			<value>dataSource</value>
    			<value>cntrpbankDataSource</value>
    			<value>ctiDataSource</value>
    		</list>
    	</property>
    	<property name="files">
    		<list>
    		</list>
    	</property>
    	<property name="https">
    		<list>
    		</list>
    	</property>
	</bean>

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- <property name="configLocation" value="classpath:sales.hibernate.cfg.xml" /> -->
        <property name="configLocations">
            <list>
                <!--  <value>classpath*:sales.hibernate.cfg.xml</value>  -->
                <!--<value>classpath*:com/chinadrtv/erp/marketing/core/hibernate.cfg.xml</value>-->
                <!--<value>classpath*:com/chinadrtv/erp/sales/core/hibernate.cfg.xml</value>-->
                <!--<value>classpath*:com/chinadrtv/erp/ic/hibernate.cfg.xml</value>-->
                <!--<value>classpath*:com/chinadrtv/erp/uc/hibernate.cfg.xml</value>-->
                <value>classpath*:hibernate.cfg.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=${hibernate.dialect}
                hibernate.query.substitutions=true 'Y', false 'N'
                hibernate.show_sql=false
                hibernate.format_sql=false
                hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
                hibernate.cache.use_second_level_cache=true
                hibernate.cache.use_query_cache=true
            </value>
            <!-- Turn batching off for better error messages under PostgreSQL -->
            <!-- hibernate.jdbc.batch_size=0 -->
        </property>

        <property name="schemaUpdate">
            <value>false</value>
        </property>
    </bean>
</beans>
